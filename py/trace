<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />
<title>:mod:`trace` --- Trace or track Python statement execution</title>
<style type="text/css">

/*
:Author: David Goodger (goodger@python.org)
:Id: $Id: html4css1.css 7952 2016-07-26 18:15:59Z milde $
:Copyright: This stylesheet has been placed in the public domain.

Default cascading style sheet for the HTML output of Docutils.

See http://docutils.sf.net/docs/howto/html-stylesheets.html for how to
customize this style sheet.
*/

/* used to remove borders from tables and images */
.borderless, table.borderless td, table.borderless th {
  border: 0 }

table.borderless td, table.borderless th {
  /* Override padding for "table.docutils td" with "! important".
     The right padding separates the table cells. */
  padding: 0 0.5em 0 0 ! important }

.first {
  /* Override more specific margin styles with "! important". */
  margin-top: 0 ! important }

.last, .with-subtitle {
  margin-bottom: 0 ! important }

.hidden {
  display: none }

.subscript {
  vertical-align: sub;
  font-size: smaller }

.superscript {
  vertical-align: super;
  font-size: smaller }

a.toc-backref {
  text-decoration: none ;
  color: black }

blockquote.epigraph {
  margin: 2em 5em ; }

dl.docutils dd {
  margin-bottom: 0.5em }

object[type="image/svg+xml"], object[type="application/x-shockwave-flash"] {
  overflow: hidden;
}

/* Uncomment (and remove this text!) to get bold-faced definition list terms
dl.docutils dt {
  font-weight: bold }
*/

div.abstract {
  margin: 2em 5em }

div.abstract p.topic-title {
  font-weight: bold ;
  text-align: center }

div.admonition, div.attention, div.caution, div.danger, div.error,
div.hint, div.important, div.note, div.tip, div.warning {
  margin: 2em ;
  border: medium outset ;
  padding: 1em }

div.admonition p.admonition-title, div.hint p.admonition-title,
div.important p.admonition-title, div.note p.admonition-title,
div.tip p.admonition-title {
  font-weight: bold ;
  font-family: sans-serif }

div.attention p.admonition-title, div.caution p.admonition-title,
div.danger p.admonition-title, div.error p.admonition-title,
div.warning p.admonition-title, .code .error {
  color: red ;
  font-weight: bold ;
  font-family: sans-serif }

/* Uncomment (and remove this text!) to get reduced vertical space in
   compound paragraphs.
div.compound .compound-first, div.compound .compound-middle {
  margin-bottom: 0.5em }

div.compound .compound-last, div.compound .compound-middle {
  margin-top: 0.5em }
*/

div.dedication {
  margin: 2em 5em ;
  text-align: center ;
  font-style: italic }

div.dedication p.topic-title {
  font-weight: bold ;
  font-style: normal }

div.figure {
  margin-left: 2em ;
  margin-right: 2em }

div.footer, div.header {
  clear: both;
  font-size: smaller }

div.line-block {
  display: block ;
  margin-top: 1em ;
  margin-bottom: 1em }

div.line-block div.line-block {
  margin-top: 0 ;
  margin-bottom: 0 ;
  margin-left: 1.5em }

div.sidebar {
  margin: 0 0 0.5em 1em ;
  border: medium outset ;
  padding: 1em ;
  background-color: #ffffee ;
  width: 40% ;
  float: right ;
  clear: right }

div.sidebar p.rubric {
  font-family: sans-serif ;
  font-size: medium }

div.system-messages {
  margin: 5em }

div.system-messages h1 {
  color: red }

div.system-message {
  border: medium outset ;
  padding: 1em }

div.system-message p.system-message-title {
  color: red ;
  font-weight: bold }

div.topic {
  margin: 2em }

h1.section-subtitle, h2.section-subtitle, h3.section-subtitle,
h4.section-subtitle, h5.section-subtitle, h6.section-subtitle {
  margin-top: 0.4em }

h1.title {
  text-align: center }

h2.subtitle {
  text-align: center }

hr.docutils {
  width: 75% }

img.align-left, .figure.align-left, object.align-left, table.align-left {
  clear: left ;
  float: left ;
  margin-right: 1em }

img.align-right, .figure.align-right, object.align-right, table.align-right {
  clear: right ;
  float: right ;
  margin-left: 1em }

img.align-center, .figure.align-center, object.align-center {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

table.align-center {
  margin-left: auto;
  margin-right: auto;
}

.align-left {
  text-align: left }

.align-center {
  clear: both ;
  text-align: center }

.align-right {
  text-align: right }

/* reset inner alignment in figures */
div.align-right {
  text-align: inherit }

/* div.align-center * { */
/*   text-align: left } */

.align-top    {
  vertical-align: top }

.align-middle {
  vertical-align: middle }

.align-bottom {
  vertical-align: bottom }

ol.simple, ul.simple {
  margin-bottom: 1em }

ol.arabic {
  list-style: decimal }

ol.loweralpha {
  list-style: lower-alpha }

ol.upperalpha {
  list-style: upper-alpha }

ol.lowerroman {
  list-style: lower-roman }

ol.upperroman {
  list-style: upper-roman }

p.attribution {
  text-align: right ;
  margin-left: 50% }

p.caption {
  font-style: italic }

p.credits {
  font-style: italic ;
  font-size: smaller }

p.label {
  white-space: nowrap }

p.rubric {
  font-weight: bold ;
  font-size: larger ;
  color: maroon ;
  text-align: center }

p.sidebar-title {
  font-family: sans-serif ;
  font-weight: bold ;
  font-size: larger }

p.sidebar-subtitle {
  font-family: sans-serif ;
  font-weight: bold }

p.topic-title {
  font-weight: bold }

pre.address {
  margin-bottom: 0 ;
  margin-top: 0 ;
  font: inherit }

pre.literal-block, pre.doctest-block, pre.math, pre.code {
  margin-left: 2em ;
  margin-right: 2em }

pre.code .ln { color: grey; } /* line numbers */
pre.code, code { background-color: #eeeeee }
pre.code .comment, code .comment { color: #5C6576 }
pre.code .keyword, code .keyword { color: #3B0D06; font-weight: bold }
pre.code .literal.string, code .literal.string { color: #0C5404 }
pre.code .name.builtin, code .name.builtin { color: #352B84 }
pre.code .deleted, code .deleted { background-color: #DEB0A1}
pre.code .inserted, code .inserted { background-color: #A3D289}

span.classifier {
  font-family: sans-serif ;
  font-style: oblique }

span.classifier-delimiter {
  font-family: sans-serif ;
  font-weight: bold }

span.interpreted {
  font-family: sans-serif }

span.option {
  white-space: nowrap }

span.pre {
  white-space: pre }

span.problematic {
  color: red }

span.section-subtitle {
  /* font-size relative to parent (h1..h6 element) */
  font-size: 80% }

table.citation {
  border-left: solid 1px gray;
  margin-left: 1px }

table.docinfo {
  margin: 2em 4em }

table.docutils {
  margin-top: 0.5em ;
  margin-bottom: 0.5em }

table.footnote {
  border-left: solid 1px black;
  margin-left: 1px }

table.docutils td, table.docutils th,
table.docinfo td, table.docinfo th {
  padding-left: 0.5em ;
  padding-right: 0.5em ;
  vertical-align: top }

table.docutils th.field-name, table.docinfo th.docinfo-name {
  font-weight: bold ;
  text-align: left ;
  white-space: nowrap ;
  padding-left: 0 }

/* "booktabs" style (no vertical lines) */
table.docutils.booktabs {
  border: 0px;
  border-top: 2px solid;
  border-bottom: 2px solid;
  border-collapse: collapse;
}
table.docutils.booktabs * {
  border: 0px;
}
table.docutils.booktabs th {
  border-bottom: thin solid;
  text-align: left;
}

h1 tt.docutils, h2 tt.docutils, h3 tt.docutils,
h4 tt.docutils, h5 tt.docutils, h6 tt.docutils {
  font-size: 100% }

ul.auto-toc {
  list-style-type: none }

</style>
</head>
<body>
<div class="document" id="mod-trace-trace-or-track-python-statement-execution">
<h1 class="title"><a href="#id1"><span class="problematic" id="id2">:mod:`trace`</span></a> --- Trace or track Python statement execution</h1>

<div class="system-message" id="id1">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 1); <em><a href="#id2">backlink</a></em></p>
Unknown interpreted text role &quot;mod&quot;.</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 4)</p>
<p>Unknown directive type &quot;module&quot;.</p>
<pre class="literal-block">
.. module:: trace
   :synopsis: Trace or track Python statement execution.

</pre>
</div>
<p><strong>Source code:</strong> <a href="#id3"><span class="problematic" id="id4">:source:`Lib/trace.py`</span></a></p>
<div class="system-message" id="id3">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 7); <em><a href="#id4">backlink</a></em></p>
Unknown interpreted text role &quot;source&quot;.</div>
<hr class="docutils" />
<p>The <a href="#id5"><span class="problematic" id="id6">:mod:`trace`</span></a> module allows you to trace program execution, generate
annotated statement coverage listings, print caller/callee relationships and
list functions executed during a program run.  It can be used in another program
or from the command line.</p>
<div class="system-message" id="id5">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 11); <em><a href="#id6">backlink</a></em></p>
Unknown interpreted text role &quot;mod&quot;.</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 16)</p>
<p>Unknown directive type &quot;seealso&quot;.</p>
<pre class="literal-block">
.. seealso::

   `Coverage.py &lt;https://coverage.readthedocs.io/&gt;`_
      A popular third-party coverage tool that provides HTML
      output along with advanced features such as branch coverage.

</pre>
</div>
<div class="section" id="command-line-usage">
<span id="trace-cli"></span><h1>Command-Line Usage</h1>
<p>The <a href="#id7"><span class="problematic" id="id8">:mod:`trace`</span></a> module can be invoked from the command line.  It can be as
simple as</p>
<div class="system-message" id="id7">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 27); <em><a href="#id8">backlink</a></em></p>
Unknown interpreted text role &quot;mod&quot;.</div>
<pre class="literal-block">
python -m trace --count -C . somefile.py ...
</pre>
<p>The above will execute <a href="#id9"><span class="problematic" id="id10">:file:`somefile.py`</span></a> and generate annotated listings of
all Python modules imported during the execution into the current directory.</p>
<div class="system-message" id="id9">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 32); <em><a href="#id10">backlink</a></em></p>
Unknown interpreted text role &quot;file&quot;.</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 35)</p>
<p>Unknown directive type &quot;program&quot;.</p>
<pre class="literal-block">
.. program:: trace

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 37)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: --help

   Display usage and exit.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 41)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: --version

   Display the version of the module and exit.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 45)</p>
<p>Unknown directive type &quot;versionadded&quot;.</p>
<pre class="literal-block">
.. versionadded:: 3.8
    Added ``--module`` option that allows to run an executable module.

</pre>
</div>
<div class="section" id="main-options">
<h2>Main options</h2>
<p>At least one of the following options must be specified when invoking
<a href="#id11"><span class="problematic" id="id12">:mod:`trace`</span></a>.  The <a href="#id13"><span class="problematic" id="id14">:option:`--listfuncs &lt;-l&gt;`</span></a> option is mutually exclusive with
the <a href="#id15"><span class="problematic" id="id16">:option:`--trace &lt;-t&gt;`</span></a> and <a href="#id17"><span class="problematic" id="id18">:option:`--count &lt;-c&gt;`</span></a> options. When
<a href="#id19"><span class="problematic" id="id20">:option:`--listfuncs &lt;-l&gt;`</span></a> is provided, neither <a href="#id21"><span class="problematic" id="id22">:option:`--count &lt;-c&gt;`</span></a> nor
<a href="#id23"><span class="problematic" id="id24">:option:`--trace &lt;-t&gt;`</span></a> are accepted, and vice versa.</p>
<div class="system-message" id="id11">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 51); <em><a href="#id12">backlink</a></em></p>
Unknown interpreted text role &quot;mod&quot;.</div>
<div class="system-message" id="id13">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 51); <em><a href="#id14">backlink</a></em></p>
Unknown interpreted text role &quot;option&quot;.</div>
<div class="system-message" id="id15">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 51); <em><a href="#id16">backlink</a></em></p>
Unknown interpreted text role &quot;option&quot;.</div>
<div class="system-message" id="id17">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 51); <em><a href="#id18">backlink</a></em></p>
Unknown interpreted text role &quot;option&quot;.</div>
<div class="system-message" id="id19">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 51); <em><a href="#id20">backlink</a></em></p>
Unknown interpreted text role &quot;option&quot;.</div>
<div class="system-message" id="id21">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 51); <em><a href="#id22">backlink</a></em></p>
Unknown interpreted text role &quot;option&quot;.</div>
<div class="system-message" id="id23">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 51); <em><a href="#id24">backlink</a></em></p>
Unknown interpreted text role &quot;option&quot;.</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 57)</p>
<p>Unknown directive type &quot;program&quot;.</p>
<pre class="literal-block">
.. program:: trace

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 59)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: -c, --count

   Produce a set of annotated listing files upon program completion that shows
   how many times each statement was executed.  See also
   :option:`--coverdir &lt;-C&gt;`, :option:`--file &lt;-f&gt;` and
   :option:`--no-report &lt;-R&gt;` below.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 66)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: -t, --trace

   Display lines as they are executed.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 70)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: -l, --listfuncs

   Display the functions executed by running the program.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 74)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: -r, --report

   Produce an annotated list from an earlier program run that used the
   :option:`--count &lt;-c&gt;` and :option:`--file &lt;-f&gt;` option.  This does not
   execute any code.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 80)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: -T, --trackcalls

   Display the calling relationships exposed by running the program.

</pre>
</div>
</div>
<div class="section" id="modifiers">
<h2>Modifiers</h2>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 87)</p>
<p>Unknown directive type &quot;program&quot;.</p>
<pre class="literal-block">
.. program:: trace

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 89)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: -f, --file=&lt;file&gt;

   Name of a file to accumulate counts over several tracing runs.  Should be
   used with the :option:`--count &lt;-c&gt;` option.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 94)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: -C, --coverdir=&lt;dir&gt;

   Directory where the report files go.  The coverage report for
   ``package.module`` is written to file :file:`{dir}/{package}/{module}.cover`.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 99)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: -m, --missing

   When generating annotated listings, mark lines which were not executed with
   ``&gt;&gt;&gt;&gt;&gt;&gt;``.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 104)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: -s, --summary

   When using :option:`--count &lt;-c&gt;` or :option:`--report &lt;-r&gt;`, write a brief
   summary to stdout for each file processed.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 109)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: -R, --no-report

   Do not generate annotated listings.  This is useful if you intend to make
   several runs with :option:`--count &lt;-c&gt;`, and then produce a single set of
   annotated listings at the end.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 115)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: -g, --timing

   Prefix each line with the time since the program started.  Only used while
   tracing.

</pre>
</div>
</div>
<div class="section" id="filters">
<h2>Filters</h2>
<p>These options may be repeated multiple times.</p>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 125)</p>
<p>Unknown directive type &quot;program&quot;.</p>
<pre class="literal-block">
.. program:: trace

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 127)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: --ignore-module=&lt;mod&gt;

   Ignore each of the given module names and its submodules (if it is a
   package).  The argument can be a list of names separated by a comma.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 132)</p>
<p>Unknown directive type &quot;cmdoption&quot;.</p>
<pre class="literal-block">
.. cmdoption:: --ignore-dir=&lt;dir&gt;

   Ignore all modules and packages in the named directory and subdirectories.
   The argument can be a list of directories separated by :data:`os.pathsep`.

</pre>
</div>
</div>
</div>
<div class="section" id="programmatic-interface">
<span id="trace-api"></span><h1>Programmatic Interface</h1>
<p class="trace-count-1 trace-1 countfuncs-0 countcallers-0 ignoremods ignoredirs infile-none outfile-none timing-false">Create an object to trace execution of a single statement or expression.  All
parameters are optional.  <em>count</em> enables counting of line numbers.  <em>trace</em>
enables line execution tracing.  <em>countfuncs</em> enables listing of the
functions called during the run.  <em>countcallers</em> enables call relationship
tracking.  <em>ignoremods</em> is a list of modules or packages to ignore.
<em>ignoredirs</em> is a list of directories whose modules or packages should be
ignored.  <em>infile</em> is the name of the file from which to read stored count
information.  <em>outfile</em> is the name of the file in which to write updated
count information.  <em>timing</em> enables a timestamp relative to when tracing was
started to be displayed.</p>
<div class="trace-count-1 trace-1 countfuncs-0 countcallers-0 ignoremods ignoredirs infile-none outfile-none timing-false system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 156)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: run(cmd)

   Execute the command and gather statistics from the execution with
   the current tracing parameters.  *cmd* must be a string or code object,
   suitable for passing into :func:`exec`.

</pre>
</div>
<div class="trace-count-1 trace-1 countfuncs-0 countcallers-0 ignoremods ignoredirs infile-none outfile-none timing-false system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 162)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: runctx(cmd, globals=None, locals=None)

   Execute the command and gather statistics from the execution with the
   current tracing parameters, in the defined global and local
   environments.  If not defined, *globals* and *locals* default to empty
   dictionaries.

</pre>
</div>
<div class="trace-count-1 trace-1 countfuncs-0 countcallers-0 ignoremods ignoredirs infile-none outfile-none timing-false system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 169)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: runfunc(func, /, *args, **kwds)

   Call *func* with the given arguments under control of the :class:`Trace`
   object with the current tracing parameters.

</pre>
</div>
<div class="trace-count-1 trace-1 countfuncs-0 countcallers-0 ignoremods ignoredirs infile-none outfile-none timing-false system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 174)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: results()

   Return a :class:`CoverageResults` object that contains the cumulative
   results of all previous calls to ``run``, ``runctx`` and ``runfunc``
   for the given :class:`Trace` instance.  Does not reset the accumulated
   trace results.
</pre>
</div>
<p class="coverageresults">A container for coverage results, created by <a href="#id25"><span class="problematic" id="id26">:meth:`Trace.results`</span></a>.  Should
not be created directly by the user.</p>
<div class="coverageresults system-message" id="id25">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 183); <em><a href="#id26">backlink</a></em></p>
Unknown interpreted text role &quot;meth&quot;.</div>
<div class="coverageresults system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 186)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: update(other)

   Merge in data from another :class:`CoverageResults` object.

</pre>
</div>
<div class="coverageresults system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">trace.rst</tt>, line 190)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: write_results(show_missing=True, summary=False, coverdir=None)

   Write coverage results.  Set *show_missing* to show lines that had no
   hits.  Set *summary* to include in the output the coverage summary per
   module.  *coverdir* specifies the directory into which the coverage
   result files will be output.  If ``None``, the results for each source
   file are placed in its directory.
</pre>
</div>
<p>A simple example demonstrating the use of the programmatic interface:</p>
<pre class="literal-block">
import sys
import trace

# create a Trace object, telling it what to ignore, and whether to
# do tracing or line-counting or both.
tracer = trace.Trace(
    ignoredirs=[sys.prefix, sys.exec_prefix],
    trace=0,
    count=1)

# run the new command using the given tracer
tracer.run('main()')

# make a report, placing output in the current directory
r = tracer.results()
r.write_results(show_missing=True, coverdir=&quot;.&quot;)
</pre>
</div>
</div>
</body>
</html>
