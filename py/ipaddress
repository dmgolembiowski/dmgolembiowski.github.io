<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />
<title>:mod:`ipaddress` --- IPv4/IPv6 manipulation library</title>
<style type="text/css">

/*
:Author: David Goodger (goodger@python.org)
:Id: $Id: html4css1.css 7952 2016-07-26 18:15:59Z milde $
:Copyright: This stylesheet has been placed in the public domain.

Default cascading style sheet for the HTML output of Docutils.

See http://docutils.sf.net/docs/howto/html-stylesheets.html for how to
customize this style sheet.
*/

/* used to remove borders from tables and images */
.borderless, table.borderless td, table.borderless th {
  border: 0 }

table.borderless td, table.borderless th {
  /* Override padding for "table.docutils td" with "! important".
     The right padding separates the table cells. */
  padding: 0 0.5em 0 0 ! important }

.first {
  /* Override more specific margin styles with "! important". */
  margin-top: 0 ! important }

.last, .with-subtitle {
  margin-bottom: 0 ! important }

.hidden {
  display: none }

.subscript {
  vertical-align: sub;
  font-size: smaller }

.superscript {
  vertical-align: super;
  font-size: smaller }

a.toc-backref {
  text-decoration: none ;
  color: black }

blockquote.epigraph {
  margin: 2em 5em ; }

dl.docutils dd {
  margin-bottom: 0.5em }

object[type="image/svg+xml"], object[type="application/x-shockwave-flash"] {
  overflow: hidden;
}

/* Uncomment (and remove this text!) to get bold-faced definition list terms
dl.docutils dt {
  font-weight: bold }
*/

div.abstract {
  margin: 2em 5em }

div.abstract p.topic-title {
  font-weight: bold ;
  text-align: center }

div.admonition, div.attention, div.caution, div.danger, div.error,
div.hint, div.important, div.note, div.tip, div.warning {
  margin: 2em ;
  border: medium outset ;
  padding: 1em }

div.admonition p.admonition-title, div.hint p.admonition-title,
div.important p.admonition-title, div.note p.admonition-title,
div.tip p.admonition-title {
  font-weight: bold ;
  font-family: sans-serif }

div.attention p.admonition-title, div.caution p.admonition-title,
div.danger p.admonition-title, div.error p.admonition-title,
div.warning p.admonition-title, .code .error {
  color: red ;
  font-weight: bold ;
  font-family: sans-serif }

/* Uncomment (and remove this text!) to get reduced vertical space in
   compound paragraphs.
div.compound .compound-first, div.compound .compound-middle {
  margin-bottom: 0.5em }

div.compound .compound-last, div.compound .compound-middle {
  margin-top: 0.5em }
*/

div.dedication {
  margin: 2em 5em ;
  text-align: center ;
  font-style: italic }

div.dedication p.topic-title {
  font-weight: bold ;
  font-style: normal }

div.figure {
  margin-left: 2em ;
  margin-right: 2em }

div.footer, div.header {
  clear: both;
  font-size: smaller }

div.line-block {
  display: block ;
  margin-top: 1em ;
  margin-bottom: 1em }

div.line-block div.line-block {
  margin-top: 0 ;
  margin-bottom: 0 ;
  margin-left: 1.5em }

div.sidebar {
  margin: 0 0 0.5em 1em ;
  border: medium outset ;
  padding: 1em ;
  background-color: #ffffee ;
  width: 40% ;
  float: right ;
  clear: right }

div.sidebar p.rubric {
  font-family: sans-serif ;
  font-size: medium }

div.system-messages {
  margin: 5em }

div.system-messages h1 {
  color: red }

div.system-message {
  border: medium outset ;
  padding: 1em }

div.system-message p.system-message-title {
  color: red ;
  font-weight: bold }

div.topic {
  margin: 2em }

h1.section-subtitle, h2.section-subtitle, h3.section-subtitle,
h4.section-subtitle, h5.section-subtitle, h6.section-subtitle {
  margin-top: 0.4em }

h1.title {
  text-align: center }

h2.subtitle {
  text-align: center }

hr.docutils {
  width: 75% }

img.align-left, .figure.align-left, object.align-left, table.align-left {
  clear: left ;
  float: left ;
  margin-right: 1em }

img.align-right, .figure.align-right, object.align-right, table.align-right {
  clear: right ;
  float: right ;
  margin-left: 1em }

img.align-center, .figure.align-center, object.align-center {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

table.align-center {
  margin-left: auto;
  margin-right: auto;
}

.align-left {
  text-align: left }

.align-center {
  clear: both ;
  text-align: center }

.align-right {
  text-align: right }

/* reset inner alignment in figures */
div.align-right {
  text-align: inherit }

/* div.align-center * { */
/*   text-align: left } */

.align-top    {
  vertical-align: top }

.align-middle {
  vertical-align: middle }

.align-bottom {
  vertical-align: bottom }

ol.simple, ul.simple {
  margin-bottom: 1em }

ol.arabic {
  list-style: decimal }

ol.loweralpha {
  list-style: lower-alpha }

ol.upperalpha {
  list-style: upper-alpha }

ol.lowerroman {
  list-style: lower-roman }

ol.upperroman {
  list-style: upper-roman }

p.attribution {
  text-align: right ;
  margin-left: 50% }

p.caption {
  font-style: italic }

p.credits {
  font-style: italic ;
  font-size: smaller }

p.label {
  white-space: nowrap }

p.rubric {
  font-weight: bold ;
  font-size: larger ;
  color: maroon ;
  text-align: center }

p.sidebar-title {
  font-family: sans-serif ;
  font-weight: bold ;
  font-size: larger }

p.sidebar-subtitle {
  font-family: sans-serif ;
  font-weight: bold }

p.topic-title {
  font-weight: bold }

pre.address {
  margin-bottom: 0 ;
  margin-top: 0 ;
  font: inherit }

pre.literal-block, pre.doctest-block, pre.math, pre.code {
  margin-left: 2em ;
  margin-right: 2em }

pre.code .ln { color: grey; } /* line numbers */
pre.code, code { background-color: #eeeeee }
pre.code .comment, code .comment { color: #5C6576 }
pre.code .keyword, code .keyword { color: #3B0D06; font-weight: bold }
pre.code .literal.string, code .literal.string { color: #0C5404 }
pre.code .name.builtin, code .name.builtin { color: #352B84 }
pre.code .deleted, code .deleted { background-color: #DEB0A1}
pre.code .inserted, code .inserted { background-color: #A3D289}

span.classifier {
  font-family: sans-serif ;
  font-style: oblique }

span.classifier-delimiter {
  font-family: sans-serif ;
  font-weight: bold }

span.interpreted {
  font-family: sans-serif }

span.option {
  white-space: nowrap }

span.pre {
  white-space: pre }

span.problematic {
  color: red }

span.section-subtitle {
  /* font-size relative to parent (h1..h6 element) */
  font-size: 80% }

table.citation {
  border-left: solid 1px gray;
  margin-left: 1px }

table.docinfo {
  margin: 2em 4em }

table.docutils {
  margin-top: 0.5em ;
  margin-bottom: 0.5em }

table.footnote {
  border-left: solid 1px black;
  margin-left: 1px }

table.docutils td, table.docutils th,
table.docinfo td, table.docinfo th {
  padding-left: 0.5em ;
  padding-right: 0.5em ;
  vertical-align: top }

table.docutils th.field-name, table.docinfo th.docinfo-name {
  font-weight: bold ;
  text-align: left ;
  white-space: nowrap ;
  padding-left: 0 }

/* "booktabs" style (no vertical lines) */
table.docutils.booktabs {
  border: 0px;
  border-top: 2px solid;
  border-bottom: 2px solid;
  border-collapse: collapse;
}
table.docutils.booktabs * {
  border: 0px;
}
table.docutils.booktabs th {
  border-bottom: thin solid;
  text-align: left;
}

h1 tt.docutils, h2 tt.docutils, h3 tt.docutils,
h4 tt.docutils, h5 tt.docutils, h6 tt.docutils {
  font-size: 100% }

ul.auto-toc {
  list-style-type: none }

</style>
</head>
<body>
<div class="document" id="mod-ipaddress-ipv4-ipv6-manipulation-library">
<h1 class="title"><a href="#id1"><span class="problematic" id="id2">:mod:`ipaddress`</span></a> --- IPv4/IPv6 manipulation library</h1>

<div class="system-message" id="id1">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 1); <em><a href="#id2">backlink</a></em></p>
Unknown interpreted text role &quot;mod&quot;.</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 4)</p>
<p>Unknown directive type &quot;module&quot;.</p>
<pre class="literal-block">
.. module:: ipaddress
   :synopsis: IPv4/IPv6 manipulation library.

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 7)</p>
<p>Unknown directive type &quot;moduleauthor&quot;.</p>
<pre class="literal-block">
.. moduleauthor:: Peter Moody

</pre>
</div>
<p><strong>Source code:</strong> <a href="#id3"><span class="problematic" id="id4">:source:`Lib/ipaddress.py`</span></a></p>
<div class="system-message" id="id3">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 9); <em><a href="#id4">backlink</a></em></p>
Unknown interpreted text role &quot;source&quot;.</div>
<hr class="docutils" />
<p><a href="#id5"><span class="problematic" id="id6">:mod:`ipaddress`</span></a> provides the capabilities to create, manipulate and
operate on IPv4 and IPv6 addresses and networks.</p>
<div class="system-message" id="id5">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 13); <em><a href="#id6">backlink</a></em></p>
Unknown interpreted text role &quot;mod&quot;.</div>
<p>The functions and classes in this module make it straightforward to handle
various tasks related to IP addresses, including checking whether or not two
hosts are on the same subnet, iterating over all hosts in a particular
subnet, checking whether or not a string represents a valid IP address or
network definition, and so on.</p>
<p>This is the full module API referenceâ€”for an overview and introduction, see
<a href="#id7"><span class="problematic" id="id8">:ref:`ipaddress-howto`</span></a>.</p>
<div class="system-message" id="id7">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 22); <em><a href="#id8">backlink</a></em></p>
Unknown interpreted text role &quot;ref&quot;.</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 25)</p>
<p>Unknown directive type &quot;versionadded&quot;.</p>
<pre class="literal-block">
.. versionadded:: 3.3

</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 27)</p>
<p>Unknown directive type &quot;testsetup&quot;.</p>
<pre class="literal-block">
.. testsetup::

   import ipaddress
   from ipaddress import (
       ip_network, IPv4Address, IPv4Interface, IPv4Network,
   )

</pre>
</div>
<div class="section" id="convenience-factory-functions">
<h1>Convenience factory functions</h1>
<p>The <a href="#id9"><span class="problematic" id="id10">:mod:`ipaddress`</span></a> module provides factory functions to conveniently create
IP addresses, networks and interfaces:</p>
<div class="system-message" id="id9">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 37); <em><a href="#id10">backlink</a></em></p>
Unknown interpreted text role &quot;mod&quot;.</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 40)</p>
<p>Unknown directive type &quot;function&quot;.</p>
<pre class="literal-block">
.. function:: ip_address(address)

   Return an :class:`IPv4Address` or :class:`IPv6Address` object depending on
   the IP address passed as argument.  Either IPv4 or IPv6 addresses may be
   supplied; integers less than 2**32 will be considered to be IPv4 by default.
   A :exc:`ValueError` is raised if *address* does not represent a valid IPv4
   or IPv6 address.

   &gt;&gt;&gt; ipaddress.ip_address('192.168.0.1')
   IPv4Address('192.168.0.1')
   &gt;&gt;&gt; ipaddress.ip_address('2001:db8::')
   IPv6Address('2001:db8::')


</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 54)</p>
<p>Unknown directive type &quot;function&quot;.</p>
<pre class="literal-block">
.. function:: ip_network(address, strict=True)

   Return an :class:`IPv4Network` or :class:`IPv6Network` object depending on
   the IP address passed as argument.  *address* is a string or integer
   representing the IP network.  Either IPv4 or IPv6 networks may be supplied;
   integers less than 2**32 will be considered to be IPv4 by default.  *strict*
   is passed to :class:`IPv4Network` or :class:`IPv6Network` constructor.  A
   :exc:`ValueError` is raised if *address* does not represent a valid IPv4 or
   IPv6 address, or if the network has host bits set.

   &gt;&gt;&gt; ipaddress.ip_network('192.168.0.0/28')
   IPv4Network('192.168.0.0/28')


</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 68)</p>
<p>Unknown directive type &quot;function&quot;.</p>
<pre class="literal-block">
.. function:: ip_interface(address)

   Return an :class:`IPv4Interface` or :class:`IPv6Interface` object depending
   on the IP address passed as argument.  *address* is a string or integer
   representing the IP address.  Either IPv4 or IPv6 addresses may be supplied;
   integers less than 2**32 will be considered to be IPv4 by default.  A
   :exc:`ValueError` is raised if *address* does not represent a valid IPv4 or
   IPv6 address.

</pre>
</div>
<p>One downside of these convenience functions is that the need to handle both
IPv4 and IPv6 formats means that error messages provide minimal
information on the precise error, as the functions don't know whether the
IPv4 or IPv6 format was intended. More detailed error reporting can be
obtained by calling the appropriate version specific class constructors
directly.</p>
</div>
<div class="section" id="ip-addresses">
<h1>IP Addresses</h1>
<div class="section" id="address-objects">
<h2>Address objects</h2>
<p>The <a href="#id11"><span class="problematic" id="id12">:class:`IPv4Address`</span></a> and <a href="#id13"><span class="problematic" id="id14">:class:`IPv6Address`</span></a> objects share a lot of common
attributes.  Some attributes that are only meaningful for IPv6 addresses are
also implemented by <a href="#id15"><span class="problematic" id="id16">:class:`IPv4Address`</span></a> objects, in order to make it easier to
write code that handles both IP versions correctly.  Address objects are
<a href="#id17"><span class="problematic" id="id18">:term:`hashable`</span></a>, so they can be used as keys in dictionaries.</p>
<div class="system-message" id="id11">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 91); <em><a href="#id12">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="system-message" id="id13">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 91); <em><a href="#id14">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="system-message" id="id15">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 91); <em><a href="#id16">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="system-message" id="id17">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 91); <em><a href="#id18">backlink</a></em></p>
Unknown interpreted text role &quot;term&quot;.</div>
<p class="ipv4address-address">Construct an IPv4 address.  An <a href="#id19"><span class="problematic" id="id20">:exc:`AddressValueError`</span></a> is raised if
<em>address</em> is not a valid IPv4 address.</p>
<div class="ipv4address-address system-message" id="id19">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 99); <em><a href="#id20">backlink</a></em></p>
Unknown interpreted text role &quot;exc&quot;.</div>
<p class="ipv4address-address">The following constitutes a valid IPv4 address:</p>
<ol class="ipv4address-address arabic">
<li><p class="first">A string in decimal-dot notation, consisting of four decimal integers in
the inclusive range 0--255, separated by dots (e.g. <tt class="docutils literal">192.168.0.1</tt>). Each
integer represents an octet (byte) in the address. Leading zeroes are
tolerated only for values less than 8 (as there is no ambiguity
between the decimal and octal interpretations of such strings).</p>
</li>
<li><p class="first">An integer that fits into 32 bits.</p>
</li>
<li><p class="first">An integer packed into a <a href="#id21"><span class="problematic" id="id22">:class:`bytes`</span></a> object of length 4 (most
significant octet first).</p>
<div class="system-message" id="id21">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 110); <em><a href="#id22">backlink</a></em></p>
<p>Unknown interpreted text role &quot;class&quot;.</p>
</div>
</li>
</ol>
<pre class="ipv4address-address doctest-block">
&gt;&gt;&gt; ipaddress.IPv4Address('192.168.0.1')
IPv4Address('192.168.0.1')
&gt;&gt;&gt; ipaddress.IPv4Address(3232235521)
IPv4Address('192.168.0.1')
&gt;&gt;&gt; ipaddress.IPv4Address(b'\xC0\xA8\x00\x01')
IPv4Address('192.168.0.1')
</pre>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 120)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: version

   The appropriate version number: ``4`` for IPv4, ``6`` for IPv6.

</pre>
</div>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 124)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: max_prefixlen

   The total number of bits in the address representation for this
   version: ``32`` for IPv4, ``128`` for IPv6.

   The prefix defines the number of leading bits in an  address that
   are compared to determine whether or not an address is part of a
   network.

</pre>
</div>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 133)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: compressed
</pre>
</div>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 134)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: exploded

   The string representation in dotted decimal notation. Leading zeroes
   are never included in the representation.

   As IPv4 does not define a shorthand notation for addresses with octets
   set to zero, these two attributes are always the same as ``str(addr)``
   for IPv4 addresses. Exposing these attributes makes it easier to
   write display code that can handle both IPv4 and IPv6 addresses.

</pre>
</div>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 144)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: packed

   The binary representation of this address - a :class:`bytes` object of
   the appropriate length (most significant octet first). This is 4 bytes
   for IPv4 and 16 bytes for IPv6.

</pre>
</div>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 150)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: reverse_pointer

   The name of the reverse DNS PTR record for the IP address, e.g.::

       &gt;&gt;&gt; ipaddress.ip_address(&quot;127.0.0.1&quot;).reverse_pointer
       '1.0.0.127.in-addr.arpa'
       &gt;&gt;&gt; ipaddress.ip_address(&quot;2001:db8::1&quot;).reverse_pointer
       '1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa'

   This is the name that could be used for performing a PTR lookup, not the
   resolved hostname itself.

   .. versionadded:: 3.5

</pre>
</div>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 164)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_multicast

   ``True`` if the address is reserved for multicast use.  See
   :RFC:`3171` (for IPv4) or :RFC:`2373` (for IPv6).

</pre>
</div>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 169)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_private

   ``True`` if the address is allocated for private networks.  See
   iana-ipv4-special-registry_ (for IPv4) or iana-ipv6-special-registry_
   (for IPv6).

</pre>
</div>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 175)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_global

   ``True`` if the address is allocated for public networks.  See
   iana-ipv4-special-registry_ (for IPv4) or iana-ipv6-special-registry_
   (for IPv6).

   .. versionadded:: 3.4

</pre>
</div>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 183)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_unspecified

   ``True`` if the address is unspecified.  See :RFC:`5735` (for IPv4)
   or :RFC:`2373` (for IPv6).

</pre>
</div>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 188)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_reserved

   ``True`` if the address is otherwise IETF reserved.

</pre>
</div>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 192)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_loopback

   ``True`` if this is a loopback address.  See :RFC:`3330` (for IPv4)
   or :RFC:`2373` (for IPv6).

</pre>
</div>
<div class="ipv4address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 197)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_link_local

   ``True`` if the address is reserved for link-local usage.  See
   :RFC:`3927`.
</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 205)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: IPv4Address.__format__(fmt)

   Returns a string representation of the IP address, controlled by
   an explicit format string.
   *fmt* can be one of the following: ``'s'``, the default option,
   equivalent to :func:`str`, ``'b'`` for a zero-padded binary string,
   ``'X'`` or ``'x'`` for an uppercase or lowercase hexadecimal
   representation, or ``'n'``, which is equivalent to ``'b'`` for IPv4
   addresses and ``'x'`` for IPv6. For binary and hexadecimal
   representations, the form specifier ``'#'`` and the grouping option
   ``'_'`` are available. ``__format__`` is used by ``format``, ``str.format``
   and f-strings.

      &gt;&gt;&gt; format(ipaddress.IPv4Address('192.168.0.1'))
      '192.168.0.1'
      &gt;&gt;&gt; '{:#b}'.format(ipaddress.IPv4Address('192.168.0.1'))
      '0b11000000101010000000000000000001'
      &gt;&gt;&gt; f'{ipaddress.IPv6Address(&quot;2001:db8::1000&quot;):s}'
      '2001:db8::1000'
      &gt;&gt;&gt; format(ipaddress.IPv6Address('2001:db8::1000'), '_X')
      '2001_0DB8_0000_0000_0000_0000_0000_1000'
      &gt;&gt;&gt; '{:#_n}'.format(ipaddress.IPv6Address('2001:db8::1000'))
      '0x2001_0db8_0000_0000_0000_0000_0000_1000'

   .. versionadded:: 3.9


</pre>
</div>
<p class="ipv6address-address">Construct an IPv6 address.  An <a href="#id23"><span class="problematic" id="id24">:exc:`AddressValueError`</span></a> is raised if
<em>address</em> is not a valid IPv6 address.</p>
<div class="ipv6address-address system-message" id="id23">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 234); <em><a href="#id24">backlink</a></em></p>
Unknown interpreted text role &quot;exc&quot;.</div>
<p class="ipv6address-address">The following constitutes a valid IPv6 address:</p>
<ol class="ipv6address-address arabic">
<li><p class="first">A string consisting of eight groups of four hexadecimal digits, each
group representing 16 bits.  The groups are separated by colons.
This describes an <em>exploded</em> (longhand) notation.  The string can
also be <em>compressed</em> (shorthand notation) by various means.  See
<a class="reference external" href="http://tools.ietf.org/html/rfc4291.html">RFC 4291</a> for details.  For example,
<tt class="docutils literal">&quot;0000:0000:0000:0000:0000:0abc:0007:0def&quot;</tt> can be compressed to
<tt class="docutils literal"><span class="pre">&quot;::abc:7:def&quot;</span></tt>.</p>
<p>Optionally, the string may also have a scope zone ID, expressed
with a suffix <tt class="docutils literal">%scope_id</tt>. If present, the scope ID must be non-empty,
and may not contain <tt class="docutils literal">%</tt>.
See <a class="reference external" href="http://tools.ietf.org/html/rfc4007.html">RFC 4007</a> for details.
For example, <tt class="docutils literal"><span class="pre">fe80::1234%1</span></tt> might identify address <tt class="docutils literal"><span class="pre">fe80::1234</span></tt> on the first link of the node.</p>
</li>
<li><p class="first">An integer that fits into 128 bits.</p>
</li>
<li><p class="first">An integer packed into a <a href="#id25"><span class="problematic" id="id26">:class:`bytes`</span></a> object of length 16, big-endian.</p>
<div class="system-message" id="id25">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 253); <em><a href="#id26">backlink</a></em></p>
<p>Unknown interpreted text role &quot;class&quot;.</p>
</div>
</li>
</ol>
<pre class="ipv6address-address doctest-block">
&gt;&gt;&gt; ipaddress.IPv6Address('2001:db8::1000')
IPv6Address('2001:db8::1000')
&gt;&gt;&gt; ipaddress.IPv6Address('ff02::5678%1')
IPv6Address('ff02::5678%1')
</pre>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 261)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: compressed

</pre>
</div>
<p class="ipv6address-address">The short form of the address representation, with leading zeroes in
groups omitted and the longest sequence of groups consisting entirely of
zeroes collapsed to a single empty group.</p>
<p class="ipv6address-address">This is also the value returned by <tt class="docutils literal">str(addr)</tt> for IPv6 addresses.</p>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 269)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: exploded

</pre>
</div>
<p class="ipv6address-address">The long form of the address representation, with all leading zeroes and
groups consisting entirely of zeroes included.</p>
<p class="ipv6address-address">For the following attributes and methods, see the corresponding
documentation of the <a href="#id27"><span class="problematic" id="id28">:class:`IPv4Address`</span></a> class:</p>
<div class="ipv6address-address system-message" id="id27">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 275); <em><a href="#id28">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 278)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: packed
</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 279)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: reverse_pointer
</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 280)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: version
</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 281)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: max_prefixlen
</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 282)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_multicast
</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 283)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_private
</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 284)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_global
</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 285)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_unspecified
</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 286)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_reserved
</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 287)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_loopback
</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 288)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_link_local

   .. versionadded:: 3.4
      is_global

</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 293)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_site_local

   ``True`` if the address is reserved for site-local usage.  Note that
   the site-local address space has been deprecated by :RFC:`3879`. Use
   :attr:`~IPv4Address.is_private` to test if this address is in the
   space of unique local addresses as defined by :RFC:`4193`.

</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 300)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: ipv4_mapped

   For addresses that appear to be IPv4 mapped addresses (starting with
   ``::FFFF/96``), this property will report the embedded IPv4 address.
   For any other address, this property will be ``None``.

</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 306)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: scope_id

   For scoped addresses as defined by :RFC:`4007`, this property identifies
   the particular zone of the address's scope that the address belongs to,
   as a string. When no scope zone is specified, this property will be ``None``.

</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 312)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: sixtofour

   For addresses that appear to be 6to4 addresses  (starting with
   ``2002::/16``) as defined by :RFC:`3056`, this property will report
   the embedded IPv4 address.  For any other address, this property will
   be ``None``.

</pre>
</div>
<div class="ipv6address-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 319)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: teredo

   For addresses that appear to be Teredo addresses (starting with
   ``2001::/32``) as defined by :RFC:`4380`, this property will report
   the embedded ``(server, client)`` IP address pair.  For any other
   address, this property will be ``None``.
</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 326)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: IPv6Address.__format__(fmt)

   Refer to the corresponding method documentation in
   :class:`IPv4Address`.

   .. versionadded:: 3.9

</pre>
</div>
</div>
<div class="section" id="conversion-to-strings-and-integers">
<h2>Conversion to Strings and Integers</h2>
<p>To interoperate with networking interfaces such as the socket module,
addresses must be converted to strings or integers. This is handled using
the <a href="#id29"><span class="problematic" id="id30">:func:`str`</span></a> and <a href="#id31"><span class="problematic" id="id32">:func:`int`</span></a> builtin functions:</p>
<div class="system-message" id="id29">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 336); <em><a href="#id30">backlink</a></em></p>
Unknown interpreted text role &quot;func&quot;.</div>
<div class="system-message" id="id31">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 336); <em><a href="#id32">backlink</a></em></p>
Unknown interpreted text role &quot;func&quot;.</div>
<pre class="literal-block">
&gt;&gt;&gt; str(ipaddress.IPv4Address('192.168.0.1'))
'192.168.0.1'
&gt;&gt;&gt; int(ipaddress.IPv4Address('192.168.0.1'))
3232235521
&gt;&gt;&gt; str(ipaddress.IPv6Address('::1'))
'::1'
&gt;&gt;&gt; int(ipaddress.IPv6Address('::1'))
1
</pre>
<p>Note that IPv6 scoped addresses are converted to integers without scope zone ID.</p>
</div>
<div class="section" id="operators">
<h2>Operators</h2>
<p>Address objects support some operators.  Unless stated otherwise, operators can
only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 with
IPv6).</p>
<div class="section" id="comparison-operators">
<h3>Comparison operators</h3>
<p>Address objects can be compared with the usual set of comparison operators.
Same IPv6 addresses with different scope zone IDs are not equal.
Some examples:</p>
<pre class="literal-block">
&gt;&gt;&gt; IPv4Address('127.0.0.2') &gt; IPv4Address('127.0.0.1')
True
&gt;&gt;&gt; IPv4Address('127.0.0.2') == IPv4Address('127.0.0.1')
False
&gt;&gt;&gt; IPv4Address('127.0.0.2') != IPv4Address('127.0.0.1')
True
&gt;&gt;&gt; IPv6Address('fe80::1234') == IPv6Address('fe80::1234%1')
False
&gt;&gt;&gt; IPv6Address('fe80::1234%1') != IPv6Address('fe80::1234%2')
True
</pre>
</div>
<div class="section" id="arithmetic-operators">
<h3>Arithmetic operators</h3>
<p>Integers can be added to or subtracted from address objects.  Some examples:</p>
<pre class="literal-block">
&gt;&gt;&gt; IPv4Address('127.0.0.2') + 3
IPv4Address('127.0.0.5')
&gt;&gt;&gt; IPv4Address('127.0.0.2') - 3
IPv4Address('126.255.255.255')
&gt;&gt;&gt; IPv4Address('255.255.255.255') + 1
Traceback (most recent call last):
  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;
ipaddress.AddressValueError: 4294967296 (&gt;= 2**32) is not permitted as an IPv4 address
</pre>
</div>
</div>
</div>
<div class="section" id="ip-network-definitions">
<h1>IP Network definitions</h1>
<p>The <a href="#id33"><span class="problematic" id="id34">:class:`IPv4Network`</span></a> and <a href="#id35"><span class="problematic" id="id36">:class:`IPv6Network`</span></a> objects provide a mechanism
for defining and inspecting IP network definitions.  A network definition
consists of a <em>mask</em> and a <em>network address</em>, and as such defines a range of
IP addresses that equal the network address when masked (binary AND) with the
mask.  For example, a network definition with the mask <tt class="docutils literal">255.255.255.0</tt> and
the network address <tt class="docutils literal">192.168.1.0</tt> consists of IP addresses in the inclusive
range <tt class="docutils literal">192.168.1.0</tt> to <tt class="docutils literal">192.168.1.255</tt>.</p>
<div class="system-message" id="id33">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 397); <em><a href="#id34">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="system-message" id="id35">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 397); <em><a href="#id36">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="section" id="prefix-net-mask-and-host-mask">
<h2>Prefix, net mask and host mask</h2>
<p>There are several equivalent ways to specify IP network masks.  A <em>prefix</em>
<tt class="docutils literal">/&lt;nbits&gt;</tt> is a notation that denotes how many high-order bits are set in
the network mask.  A <em>net mask</em> is an IP address with some number of
high-order bits set.  Thus the prefix <tt class="docutils literal">/24</tt> is equivalent to the net mask
<tt class="docutils literal">255.255.255.0</tt> in IPv4, or <tt class="docutils literal">ffff:ff00::</tt> in IPv6.  In addition, a
<em>host mask</em> is the logical inverse of a <em>net mask</em>, and is sometimes used
(for example in Cisco access control lists) to denote a network mask.  The
host mask equivalent to <tt class="docutils literal">/24</tt> in IPv4 is <tt class="docutils literal">0.0.0.255</tt>.</p>
</div>
<div class="section" id="network-objects">
<h2>Network objects</h2>
<p>All attributes implemented by address objects are implemented by network
objects as well.  In addition, network objects implement additional attributes.
All of these are common between <a href="#id37"><span class="problematic" id="id38">:class:`IPv4Network`</span></a> and <a href="#id39"><span class="problematic" id="id40">:class:`IPv6Network`</span></a>,
so to avoid duplication they are only documented for <a href="#id41"><span class="problematic" id="id42">:class:`IPv4Network`</span></a>.
Network objects are <a href="#id43"><span class="problematic" id="id44">:term:`hashable`</span></a>, so they can be used as keys in
dictionaries.</p>
<div class="system-message" id="id37">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 422); <em><a href="#id38">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="system-message" id="id39">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 422); <em><a href="#id40">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="system-message" id="id41">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 422); <em><a href="#id42">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="system-message" id="id43">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 422); <em><a href="#id44">backlink</a></em></p>
Unknown interpreted text role &quot;term&quot;.</div>
<p class="ipv4network-address strict-true">Construct an IPv4 network definition.  <em>address</em> can be one of the following:</p>
<ol class="ipv4network-address strict-true arabic">
<li><p class="first">A string consisting of an IP address and an optional mask, separated by
a slash (<tt class="docutils literal">/</tt>).  The IP address is the network address, and the mask
can be either a single number, which means it's a <em>prefix</em>, or a string
representation of an IPv4 address.  If it's the latter, the mask is
interpreted as a <em>net mask</em> if it starts with a non-zero field, or as a
<em>host mask</em> if it starts with a zero field, with the single exception of
an all-zero mask which is treated as a <em>net mask</em>.  If no mask is provided,
it's considered to be <tt class="docutils literal">/32</tt>.</p>
<p>For example, the following <em>address</em> specifications are equivalent:
<tt class="docutils literal">192.168.1.0/24</tt>, <tt class="docutils literal">192.168.1.0/255.255.255.0</tt> and
<tt class="docutils literal">192.168.1.0/0.0.0.255</tt>.</p>
</li>
<li><p class="first">An integer that fits into 32 bits.  This is equivalent to a
single-address network, with the network address being <em>address</em> and
the mask being <tt class="docutils literal">/32</tt>.</p>
</li>
<li><p class="first">An integer packed into a <a href="#id45"><span class="problematic" id="id46">:class:`bytes`</span></a> object of length 4, big-endian.
The interpretation is similar to an integer <em>address</em>.</p>
<div class="system-message" id="id45">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 450); <em><a href="#id46">backlink</a></em></p>
<p>Unknown interpreted text role &quot;class&quot;.</p>
</div>
</li>
<li><p class="first">A two-tuple of an address description and a netmask, where the address
description is either a string, a 32-bits integer, a 4-bytes packed
integer, or an existing IPv4Address object; and the netmask is either
an integer representing the prefix length (e.g. <tt class="docutils literal">24</tt>) or a string
representing the prefix mask (e.g. <tt class="docutils literal">255.255.255.0</tt>).</p>
</li>
</ol>
<p class="ipv4network-address strict-true">An <a href="#id47"><span class="problematic" id="id48">:exc:`AddressValueError`</span></a> is raised if <em>address</em> is not a valid IPv4
address.  A <a href="#id49"><span class="problematic" id="id50">:exc:`NetmaskValueError`</span></a> is raised if the mask is not valid for
an IPv4 address.</p>
<div class="ipv4network-address strict-true system-message" id="id47">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 459); <em><a href="#id48">backlink</a></em></p>
Unknown interpreted text role &quot;exc&quot;.</div>
<div class="ipv4network-address strict-true system-message" id="id49">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 459); <em><a href="#id50">backlink</a></em></p>
Unknown interpreted text role &quot;exc&quot;.</div>
<p class="ipv4network-address strict-true">If <em>strict</em> is <tt class="docutils literal">True</tt> and host bits are set in the supplied address,
then <a href="#id51"><span class="problematic" id="id52">:exc:`ValueError`</span></a> is raised.  Otherwise, the host bits are masked out
to determine the appropriate network address.</p>
<div class="ipv4network-address strict-true system-message" id="id51">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 463); <em><a href="#id52">backlink</a></em></p>
Unknown interpreted text role &quot;exc&quot;.</div>
<p class="ipv4network-address strict-true">Unless stated otherwise, all network methods accepting other network/address
objects will raise <a href="#id53"><span class="problematic" id="id54">:exc:`TypeError`</span></a> if the argument's IP version is
incompatible to <tt class="docutils literal">self</tt>.</p>
<div class="ipv4network-address strict-true system-message" id="id53">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 467); <em><a href="#id54">backlink</a></em></p>
Unknown interpreted text role &quot;exc&quot;.</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 471)</p>
<p>Unknown directive type &quot;versionchanged&quot;.</p>
<pre class="literal-block">
.. versionchanged:: 3.5

   Added the two-tuple form for the *address* constructor parameter.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 475)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: version
</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 476)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: max_prefixlen

   Refer to the corresponding attribute documentation in
   :class:`IPv4Address`.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 481)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_multicast
</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 482)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_private
</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 483)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_unspecified
</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 484)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_reserved
</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 485)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_loopback
</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 486)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_link_local

   These attributes are true for the network as a whole if they are true
   for both the network address and the broadcast address.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 491)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: network_address

   The network address for the network. The network address and the
   prefix length together uniquely define a network.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 496)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: broadcast_address

   The broadcast address for the network. Packets sent to the broadcast
   address should be received by every host on the network.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 501)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: hostmask

   The host mask, as an :class:`IPv4Address` object.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 505)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: netmask

   The net mask, as an :class:`IPv4Address` object.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 509)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: with_prefixlen
</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 510)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: compressed
</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 511)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: exploded

   A string representation of the network, with the mask in prefix
   notation.

   ``with_prefixlen`` and ``compressed`` are always the same as
   ``str(network)``.
   ``exploded`` uses the exploded form the network address.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 520)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: with_netmask

   A string representation of the network, with the mask in net mask
   notation.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 525)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: with_hostmask

   A string representation of the network, with the mask in host mask
   notation.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 530)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: num_addresses

   The total number of addresses in the network.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 534)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: prefixlen

   Length of the network prefix, in bits.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 538)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: hosts()

   Returns an iterator over the usable hosts in the network.  The usable
   hosts are all the IP addresses that belong to the network, except the
   network address itself and the network broadcast address.  For networks
   with a mask length of 31, the network address and network broadcast
   address are also included in the result. Networks with a mask of 32
   will return a list containing the single host address.

      &gt;&gt;&gt; list(ip_network('192.0.2.0/29').hosts())  #doctest: +NORMALIZE_WHITESPACE
      [IPv4Address('192.0.2.1'), IPv4Address('192.0.2.2'),
       IPv4Address('192.0.2.3'), IPv4Address('192.0.2.4'),
       IPv4Address('192.0.2.5'), IPv4Address('192.0.2.6')]
      &gt;&gt;&gt; list(ip_network('192.0.2.0/31').hosts())
      [IPv4Address('192.0.2.0'), IPv4Address('192.0.2.1')]
      &gt;&gt;&gt; list(ip_network('192.0.2.1/32').hosts())
      [IPv4Address('192.0.2.1')]

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 556)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: overlaps(other)

   ``True`` if this network is partly or wholly contained in *other* or
   *other* is wholly contained in this network.

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 561)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: address_exclude(network)

   Computes the network definitions resulting from removing the given
   *network* from this one.  Returns an iterator of network objects.
   Raises :exc:`ValueError` if *network* is not completely contained in
   this network.

      &gt;&gt;&gt; n1 = ip_network('192.0.2.0/28')
      &gt;&gt;&gt; n2 = ip_network('192.0.2.1/32')
      &gt;&gt;&gt; list(n1.address_exclude(n2))  #doctest: +NORMALIZE_WHITESPACE
      [IPv4Network('192.0.2.8/29'), IPv4Network('192.0.2.4/30'),
       IPv4Network('192.0.2.2/31'), IPv4Network('192.0.2.0/32')]

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 574)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: subnets(prefixlen_diff=1, new_prefix=None)

   The subnets that join to make the current network definition, depending
   on the argument values.  *prefixlen_diff* is the amount our prefix
   length should be increased by.  *new_prefix* is the desired new
   prefix of the subnets; it must be larger than our prefix.  One and
   only one of *prefixlen_diff* and *new_prefix* must be set.  Returns an
   iterator of network objects.

      &gt;&gt;&gt; list(ip_network('192.0.2.0/24').subnets())
      [IPv4Network('192.0.2.0/25'), IPv4Network('192.0.2.128/25')]
      &gt;&gt;&gt; list(ip_network('192.0.2.0/24').subnets(prefixlen_diff=2))  #doctest: +NORMALIZE_WHITESPACE
      [IPv4Network('192.0.2.0/26'), IPv4Network('192.0.2.64/26'),
       IPv4Network('192.0.2.128/26'), IPv4Network('192.0.2.192/26')]
      &gt;&gt;&gt; list(ip_network('192.0.2.0/24').subnets(new_prefix=26))  #doctest: +NORMALIZE_WHITESPACE
      [IPv4Network('192.0.2.0/26'), IPv4Network('192.0.2.64/26'),
       IPv4Network('192.0.2.128/26'), IPv4Network('192.0.2.192/26')]
      &gt;&gt;&gt; list(ip_network('192.0.2.0/24').subnets(new_prefix=23))
      Traceback (most recent call last):
        File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;
          raise ValueError('new prefix must be longer')
      ValueError: new prefix must be longer
      &gt;&gt;&gt; list(ip_network('192.0.2.0/24').subnets(new_prefix=25))
      [IPv4Network('192.0.2.0/25'), IPv4Network('192.0.2.128/25')]

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 599)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: supernet(prefixlen_diff=1, new_prefix=None)

   The supernet containing this network definition, depending on the
   argument values.  *prefixlen_diff* is the amount our prefix length
   should be decreased by.  *new_prefix* is the desired new prefix of
   the supernet; it must be smaller than our prefix.  One and only one
   of *prefixlen_diff* and *new_prefix* must be set.  Returns a single
   network object.

      &gt;&gt;&gt; ip_network('192.0.2.0/24').supernet()
      IPv4Network('192.0.2.0/23')
      &gt;&gt;&gt; ip_network('192.0.2.0/24').supernet(prefixlen_diff=2)
      IPv4Network('192.0.0.0/22')
      &gt;&gt;&gt; ip_network('192.0.2.0/24').supernet(new_prefix=20)
      IPv4Network('192.0.0.0/20')

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 615)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: subnet_of(other)

   Return ``True`` if this network is a subnet of *other*.

     &gt;&gt;&gt; a = ip_network('192.168.1.0/24')
     &gt;&gt;&gt; b = ip_network('192.168.1.128/30')
     &gt;&gt;&gt; b.subnet_of(a)
     True

   .. versionadded:: 3.7

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 626)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: supernet_of(other)

   Return ``True`` if this network is a supernet of *other*.

     &gt;&gt;&gt; a = ip_network('192.168.1.0/24')
     &gt;&gt;&gt; b = ip_network('192.168.1.128/30')
     &gt;&gt;&gt; a.supernet_of(b)
     True

   .. versionadded:: 3.7

</pre>
</div>
<div class="ipv4network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 637)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: compare_networks(other)

   Compare this network to *other*.  In this comparison only the network
   addresses are considered; host bits aren't.  Returns either ``-1``,
   ``0`` or ``1``.

      &gt;&gt;&gt; ip_network('192.0.2.1/32').compare_networks(ip_network('192.0.2.2/32'))
      -1
      &gt;&gt;&gt; ip_network('192.0.2.1/32').compare_networks(ip_network('192.0.2.0/32'))
      1
      &gt;&gt;&gt; ip_network('192.0.2.1/32').compare_networks(ip_network('192.0.2.1/32'))
      0

   .. deprecated:: 3.7
      It uses the same ordering and comparison algorithm as &quot;&lt;&quot;, &quot;==&quot;, and &quot;&gt;&quot;
</pre>
</div>
<p class="ipv6network-address strict-true">Construct an IPv6 network definition.  <em>address</em> can be one of the following:</p>
<ol class="ipv6network-address strict-true arabic">
<li><p class="first">A string consisting of an IP address and an optional prefix length,
separated by a slash (<tt class="docutils literal">/</tt>).  The IP address is the network address,
and the prefix length must be a single number, the <em>prefix</em>.  If no
prefix length is provided, it's considered to be <tt class="docutils literal">/128</tt>.</p>
<p>Note that currently expanded netmasks are not supported.  That means
<tt class="docutils literal"><span class="pre">2001:db00::0/24</span></tt> is a valid argument while <tt class="docutils literal"><span class="pre">2001:db00::0/ffff:ff00::</span></tt>
not.</p>
</li>
<li><p class="first">An integer that fits into 128 bits.  This is equivalent to a
single-address network, with the network address being <em>address</em> and
the mask being <tt class="docutils literal">/128</tt>.</p>
</li>
<li><p class="first">An integer packed into a <a href="#id55"><span class="problematic" id="id56">:class:`bytes`</span></a> object of length 16, big-endian.
The interpretation is similar to an integer <em>address</em>.</p>
<div class="system-message" id="id55">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 671); <em><a href="#id56">backlink</a></em></p>
<p>Unknown interpreted text role &quot;class&quot;.</p>
</div>
</li>
<li><p class="first">A two-tuple of an address description and a netmask, where the address
description is either a string, a 128-bits integer, a 16-bytes packed
integer, or an existing IPv6Address object; and the netmask is an
integer representing the prefix length.</p>
</li>
</ol>
<p class="ipv6network-address strict-true">An <a href="#id57"><span class="problematic" id="id58">:exc:`AddressValueError`</span></a> is raised if <em>address</em> is not a valid IPv6
address.  A <a href="#id59"><span class="problematic" id="id60">:exc:`NetmaskValueError`</span></a> is raised if the mask is not valid for
an IPv6 address.</p>
<div class="ipv6network-address strict-true system-message" id="id57">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 679); <em><a href="#id58">backlink</a></em></p>
Unknown interpreted text role &quot;exc&quot;.</div>
<div class="ipv6network-address strict-true system-message" id="id59">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 679); <em><a href="#id60">backlink</a></em></p>
Unknown interpreted text role &quot;exc&quot;.</div>
<p class="ipv6network-address strict-true">If <em>strict</em> is <tt class="docutils literal">True</tt> and host bits are set in the supplied address,
then <a href="#id61"><span class="problematic" id="id62">:exc:`ValueError`</span></a> is raised.  Otherwise, the host bits are masked out
to determine the appropriate network address.</p>
<div class="ipv6network-address strict-true system-message" id="id61">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 683); <em><a href="#id62">backlink</a></em></p>
Unknown interpreted text role &quot;exc&quot;.</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 687)</p>
<p>Unknown directive type &quot;versionchanged&quot;.</p>
<pre class="literal-block">
.. versionchanged:: 3.5

   Added the two-tuple form for the *address* constructor parameter.

</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 691)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: version
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 692)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: max_prefixlen
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 693)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_multicast
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 694)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_private
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 695)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_unspecified
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 696)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_reserved
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 697)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_loopback
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 698)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_link_local
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 699)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: network_address
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 700)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: broadcast_address
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 701)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: hostmask
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 702)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: netmask
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 703)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: with_prefixlen
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 704)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: compressed
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 705)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: exploded
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 706)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: with_netmask
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 707)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: with_hostmask
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 708)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: num_addresses
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 709)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: prefixlen
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 710)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: hosts()

   Returns an iterator over the usable hosts in the network.  The usable
   hosts are all the IP addresses that belong to the network, except the
   Subnet-Router anycast address.  For networks with a mask length of 127,
   the Subnet-Router anycast address is also included in the result.
   Networks with a mask of 128 will return a list containing the
   single host address.

</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 719)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: overlaps(other)
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 720)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: address_exclude(network)
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 721)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: subnets(prefixlen_diff=1, new_prefix=None)
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 722)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: supernet(prefixlen_diff=1, new_prefix=None)
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 723)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: subnet_of(other)
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 724)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: supernet_of(other)
</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 725)</p>
<p>Unknown directive type &quot;method&quot;.</p>
<pre class="literal-block">
.. method:: compare_networks(other)

   Refer to the corresponding attribute documentation in
   :class:`IPv4Network`.

</pre>
</div>
<div class="ipv6network-address strict-true system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 730)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: is_site_local

   These attribute is true for the network as a whole if it is true
   for both the network address and the broadcast address.
</pre>
</div>
</div>
<div class="section" id="id63">
<h2>Operators</h2>
<p>Network objects support some operators.  Unless stated otherwise, operators can
only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 with
IPv6).</p>
<div class="section" id="logical-operators">
<h3>Logical operators</h3>
<p>Network objects can be compared with the usual set of logical operators.
Network objects are ordered first by network address, then by net mask.</p>
</div>
<div class="section" id="iteration">
<h3>Iteration</h3>
<p>Network objects can be iterated to list all the addresses belonging to the
network.  For iteration, <em>all</em> hosts are returned, including unusable hosts
(for usable hosts, use the <a href="#id64"><span class="problematic" id="id65">:meth:`~IPv4Network.hosts`</span></a> method).  An
example:</p>
<div class="system-message" id="id64">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 754); <em><a href="#id65">backlink</a></em></p>
Unknown interpreted text role &quot;meth&quot;.</div>
<pre class="literal-block">
&gt;&gt;&gt; for addr in IPv4Network('192.0.2.0/28'):
...     addr
...
IPv4Address('192.0.2.0')
IPv4Address('192.0.2.1')
IPv4Address('192.0.2.2')
IPv4Address('192.0.2.3')
IPv4Address('192.0.2.4')
IPv4Address('192.0.2.5')
IPv4Address('192.0.2.6')
IPv4Address('192.0.2.7')
IPv4Address('192.0.2.8')
IPv4Address('192.0.2.9')
IPv4Address('192.0.2.10')
IPv4Address('192.0.2.11')
IPv4Address('192.0.2.12')
IPv4Address('192.0.2.13')
IPv4Address('192.0.2.14')
IPv4Address('192.0.2.15')
</pre>
</div>
<div class="section" id="networks-as-containers-of-addresses">
<h3>Networks as containers of addresses</h3>
<p>Network objects can act as containers of addresses.  Some examples:</p>
<pre class="literal-block">
&gt;&gt;&gt; IPv4Network('192.0.2.0/28')[0]
IPv4Address('192.0.2.0')
&gt;&gt;&gt; IPv4Network('192.0.2.0/28')[15]
IPv4Address('192.0.2.15')
&gt;&gt;&gt; IPv4Address('192.0.2.6') in IPv4Network('192.0.2.0/28')
True
&gt;&gt;&gt; IPv4Address('192.0.3.6') in IPv4Network('192.0.2.0/28')
False
</pre>
</div>
</div>
</div>
<div class="section" id="interface-objects">
<h1>Interface objects</h1>
<p>Interface objects are <a href="#id66"><span class="problematic" id="id67">:term:`hashable`</span></a>, so they can be used as keys in
dictionaries.</p>
<div class="system-message" id="id66">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 798); <em><a href="#id67">backlink</a></em></p>
Unknown interpreted text role &quot;term&quot;.</div>
<p class="ipv4interface-address">Construct an IPv4 interface.  The meaning of <em>address</em> is as in the
constructor of <a href="#id68"><span class="problematic" id="id69">:class:`IPv4Network`</span></a>, except that arbitrary host addresses
are always accepted.</p>
<div class="ipv4interface-address system-message" id="id68">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 803); <em><a href="#id69">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<p class="ipv4interface-address"><a href="#id70"><span class="problematic" id="id71">:class:`IPv4Interface`</span></a> is a subclass of <a href="#id72"><span class="problematic" id="id73">:class:`IPv4Address`</span></a>, so it inherits
all the attributes from that class.  In addition, the following attributes
are available:</p>
<div class="ipv4interface-address system-message" id="id70">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 807); <em><a href="#id71">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="ipv4interface-address system-message" id="id72">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 807); <em><a href="#id73">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="ipv4interface-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 811)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: ip

   The address (:class:`IPv4Address`) without network information.

      &gt;&gt;&gt; interface = IPv4Interface('192.0.2.5/24')
      &gt;&gt;&gt; interface.ip
      IPv4Address('192.0.2.5')

</pre>
</div>
<div class="ipv4interface-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 819)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: network

   The network (:class:`IPv4Network`) this interface belongs to.

      &gt;&gt;&gt; interface = IPv4Interface('192.0.2.5/24')
      &gt;&gt;&gt; interface.network
      IPv4Network('192.0.2.0/24')

</pre>
</div>
<div class="ipv4interface-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 827)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: with_prefixlen

   A string representation of the interface with the mask in prefix notation.

      &gt;&gt;&gt; interface = IPv4Interface('192.0.2.5/24')
      &gt;&gt;&gt; interface.with_prefixlen
      '192.0.2.5/24'

</pre>
</div>
<div class="ipv4interface-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 835)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: with_netmask

   A string representation of the interface with the network as a net mask.

      &gt;&gt;&gt; interface = IPv4Interface('192.0.2.5/24')
      &gt;&gt;&gt; interface.with_netmask
      '192.0.2.5/255.255.255.0'

</pre>
</div>
<div class="ipv4interface-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 843)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: with_hostmask

   A string representation of the interface with the network as a host mask.

      &gt;&gt;&gt; interface = IPv4Interface('192.0.2.5/24')
      &gt;&gt;&gt; interface.with_hostmask
      '192.0.2.5/0.0.0.255'
</pre>
</div>
<p class="ipv6interface-address">Construct an IPv6 interface.  The meaning of <em>address</em> is as in the
constructor of <a href="#id74"><span class="problematic" id="id75">:class:`IPv6Network`</span></a>, except that arbitrary host addresses
are always accepted.</p>
<div class="ipv6interface-address system-message" id="id74">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 854); <em><a href="#id75">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<p class="ipv6interface-address"><a href="#id76"><span class="problematic" id="id77">:class:`IPv6Interface`</span></a> is a subclass of <a href="#id78"><span class="problematic" id="id79">:class:`IPv6Address`</span></a>, so it inherits
all the attributes from that class.  In addition, the following attributes
are available:</p>
<div class="ipv6interface-address system-message" id="id76">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 858); <em><a href="#id77">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="ipv6interface-address system-message" id="id78">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 858); <em><a href="#id79">backlink</a></em></p>
Unknown interpreted text role &quot;class&quot;.</div>
<div class="ipv6interface-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 862)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: ip
</pre>
</div>
<div class="ipv6interface-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 863)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: network
</pre>
</div>
<div class="ipv6interface-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 864)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: with_prefixlen
</pre>
</div>
<div class="ipv6interface-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 865)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: with_netmask
</pre>
</div>
<div class="ipv6interface-address system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 866)</p>
<p>Unknown directive type &quot;attribute&quot;.</p>
<pre class="literal-block">
.. attribute:: with_hostmask

   Refer to the corresponding attribute documentation in
   :class:`IPv4Interface`.
</pre>
</div>
<div class="section" id="id80">
<h2>Operators</h2>
<p>Interface objects support some operators.  Unless stated otherwise, operators
can only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 with
IPv6).</p>
<div class="section" id="id81">
<h3>Logical operators</h3>
<p>Interface objects can be compared with the usual set of logical operators.</p>
<p>For equality comparison (<tt class="docutils literal">==</tt> and <tt class="docutils literal">!=</tt>), both the IP address and network
must be the same for the objects to be equal.  An interface will not compare
equal to any address or network object.</p>
<p>For ordering (<tt class="docutils literal">&lt;</tt>, <tt class="docutils literal">&gt;</tt>, etc) the rules are different.  Interface and
address objects with the same IP version can be compared, and the address
objects will always sort before the interface objects.  Two interface objects
are first compared by their networks and, if those are the same, then by their
IP addresses.</p>
</div>
</div>
</div>
<div class="section" id="other-module-level-functions">
<h1>Other Module Level Functions</h1>
<p>The module also provides the following module level functions:</p>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 901)</p>
<p>Unknown directive type &quot;function&quot;.</p>
<pre class="literal-block">
.. function:: v4_int_to_packed(address)

   Represent an address as 4 packed bytes in network (big-endian) order.
   *address* is an integer representation of an IPv4 IP address.  A
   :exc:`ValueError` is raised if the integer is negative or too large to be an
   IPv4 IP address.

   &gt;&gt;&gt; ipaddress.ip_address(3221225985)
   IPv4Address('192.0.2.1')
   &gt;&gt;&gt; ipaddress.v4_int_to_packed(3221225985)
   b'\xc0\x00\x02\x01'


</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 914)</p>
<p>Unknown directive type &quot;function&quot;.</p>
<pre class="literal-block">
.. function:: v6_int_to_packed(address)

   Represent an address as 16 packed bytes in network (big-endian) order.
   *address* is an integer representation of an IPv6 IP address.  A
   :exc:`ValueError` is raised if the integer is negative or too large to be an
   IPv6 IP address.


</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 922)</p>
<p>Unknown directive type &quot;function&quot;.</p>
<pre class="literal-block">
.. function:: summarize_address_range(first, last)

   Return an iterator of the summarized network range given the first and last
   IP addresses.  *first* is the first :class:`IPv4Address` or
   :class:`IPv6Address` in the range and *last* is the last :class:`IPv4Address`
   or :class:`IPv6Address` in the range.  A :exc:`TypeError` is raised if
   *first* or *last* are not IP addresses or are not of the same version.  A
   :exc:`ValueError` is raised if *last* is not greater than *first* or if
   *first* address version is not 4 or 6.

   &gt;&gt;&gt; [ipaddr for ipaddr in ipaddress.summarize_address_range(
   ...    ipaddress.IPv4Address('192.0.2.0'),
   ...    ipaddress.IPv4Address('192.0.2.130'))]
   [IPv4Network('192.0.2.0/25'), IPv4Network('192.0.2.128/31'), IPv4Network('192.0.2.130/32')]


</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 938)</p>
<p>Unknown directive type &quot;function&quot;.</p>
<pre class="literal-block">
.. function:: collapse_addresses(addresses)

   Return an iterator of the collapsed :class:`IPv4Network` or
   :class:`IPv6Network` objects.  *addresses* is an iterator of
   :class:`IPv4Network` or :class:`IPv6Network` objects.  A :exc:`TypeError` is
   raised if *addresses* contains mixed version objects.

   &gt;&gt;&gt; [ipaddr for ipaddr in
   ... ipaddress.collapse_addresses([ipaddress.IPv4Network('192.0.2.0/25'),
   ... ipaddress.IPv4Network('192.0.2.128/25')])]
   [IPv4Network('192.0.2.0/24')]


</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 951)</p>
<p>Unknown directive type &quot;function&quot;.</p>
<pre class="literal-block">
.. function:: get_mixed_type_key(obj)

   Return a key suitable for sorting between networks and addresses.  Address
   and Network objects are not sortable by default; they're fundamentally
   different, so the expression::

     IPv4Address('192.0.2.0') &lt;= IPv4Network('192.0.2.0/24')

   doesn't make sense.  There are some times however, where you may wish to
   have :mod:`ipaddress` sort these anyway.  If you need to do this, you can use
   this function as the *key* argument to :func:`sorted()`.

   *obj* is either a network or address object.


</pre>
</div>
</div>
<div class="section" id="custom-exceptions">
<h1>Custom Exceptions</h1>
<p>To support more specific error reporting from class constructors, the
module defines the following exceptions:</p>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 972)</p>
<p>Unknown directive type &quot;exception&quot;.</p>
<pre class="literal-block">
.. exception:: AddressValueError(ValueError)

   Any value error related to the address.


</pre>
</div>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">ipaddress.rst</tt>, line 977)</p>
<p>Unknown directive type &quot;exception&quot;.</p>
<pre class="literal-block">
.. exception:: NetmaskValueError(ValueError)

   Any value error related to the net mask.
</pre>
</div>
</div>
</div>
</body>
</html>
